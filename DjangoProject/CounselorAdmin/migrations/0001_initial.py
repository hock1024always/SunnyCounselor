# Generated by Django 5.2 on 2025-10-30 13:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AdminUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(max_length=50, unique=True, verbose_name="用户名"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("男", "男"), ("女", "女")],
                        max_length=2,
                        verbose_name="性别",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=100, null=True, verbose_name="邮箱地址"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="手机号"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="加密密码")),
            ],
            options={
                "verbose_name": "管理员",
                "verbose_name_plural": "管理员",
                "db_table": "admin_users",
            },
        ),
        migrations.CreateModel(
            name="BannerModule",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "module_name",
                    models.CharField(max_length=50, verbose_name="模块名称"),
                ),
                (
                    "carousel_count",
                    models.IntegerField(default=0, verbose_name="轮播数量"),
                ),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "pictures",
                    models.JSONField(
                        blank=True, null=True, verbose_name="轮播图片URL数组"
                    ),
                ),
            ],
            options={
                "verbose_name": "轮播图模块",
                "verbose_name_plural": "轮播图模块",
                "db_table": "banner_modules",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "category_name",
                    models.CharField(max_length=50, verbose_name="栏目名称"),
                ),
                ("sort_order", models.IntegerField(default=0, verbose_name="栏目顺序")),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "宣教栏目",
                "verbose_name_plural": "宣教栏目",
                "db_table": "categories",
                "ordering": ["sort_order", "created_time"],
            },
        ),
        migrations.CreateModel(
            name="Counselor",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, verbose_name="咨询师姓名")),
                (
                    "username",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="系统用户昵称"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("男", "男"), ("女", "女")],
                        max_length=2,
                        verbose_name="性别",
                    ),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="联系电话")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=100, null=True, verbose_name="邮箱地址"
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="所属机构"
                    ),
                ),
                (
                    "expertise_tags",
                    models.JSONField(blank=True, null=True, verbose_name="擅长标签"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("启用", "启用"), ("停用", "停用")],
                        default="启用",
                        max_length=10,
                        verbose_name="状态",
                    ),
                ),
            ],
            options={
                "verbose_name": "咨询师",
                "verbose_name_plural": "咨询师",
                "db_table": "counselors",
            },
        ),
        migrations.CreateModel(
            name="InterviewAssessment",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "organization",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="所属机构"
                    ),
                ),
                (
                    "grade",
                    models.CharField(blank=True, max_length=20, verbose_name="年级"),
                ),
                (
                    "class_name",
                    models.CharField(blank=True, max_length=20, verbose_name="班级"),
                ),
                ("student_name", models.CharField(max_length=50, verbose_name="姓名")),
                (
                    "interview_count",
                    models.IntegerField(default=1, verbose_name="访谈次数"),
                ),
                (
                    "interview_status",
                    models.CharField(
                        choices=[
                            ("待处理", "待处理"),
                            ("进行中", "进行中"),
                            ("已完成", "已完成"),
                        ],
                        default="待处理",
                        max_length=10,
                        verbose_name="访谈状态",
                    ),
                ),
                (
                    "interview_type",
                    models.CharField(blank=True, max_length=50, verbose_name="类型"),
                ),
                (
                    "doctor_assessment",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="医生评定"
                    ),
                ),
                (
                    "follow_up_plan",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="后续计划"
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="添加时间"),
                ),
            ],
            options={
                "verbose_name": "访谈评估",
                "verbose_name_plural": "访谈评估",
                "db_table": "interview_assessments",
            },
        ),
        migrations.CreateModel(
            name="NegativeEvent",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "student_name",
                    models.CharField(max_length=50, verbose_name="学生姓名"),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="机构名称"
                    ),
                ),
                (
                    "grade",
                    models.CharField(blank=True, max_length=20, verbose_name="年级"),
                ),
                (
                    "class_name",
                    models.CharField(blank=True, max_length=20, verbose_name="班级"),
                ),
                (
                    "event_details",
                    models.TextField(blank=True, verbose_name="事件详情"),
                ),
                (
                    "event_date",
                    models.DateField(blank=True, null=True, verbose_name="事件日期"),
                ),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "disabled",
                    models.BooleanField(default=False, verbose_name="是否禁用"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "负面事件",
                "verbose_name_plural": "负面事件",
                "db_table": "negative_events",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=200, verbose_name="通知标题")),
                ("content", models.TextField(blank=True, verbose_name="通知内容")),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="发布状态"),
                ),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "通知",
                "verbose_name_plural": "通知",
                "db_table": "notifications",
            },
        ),
        migrations.CreateModel(
            name="ReferralUnit",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "unit_name",
                    models.CharField(max_length=100, verbose_name="单位名称"),
                ),
                (
                    "address",
                    models.CharField(blank=True, max_length=200, verbose_name="地址"),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="联系电话"
                    ),
                ),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "转介单位",
                "verbose_name_plural": "转介单位",
                "db_table": "referral_units",
            },
        ),
        migrations.CreateModel(
            name="Captcha",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "key",
                    models.CharField(
                        max_length=64, unique=True, verbose_name="验证码键"
                    ),
                ),
                ("text", models.CharField(max_length=8, verbose_name="验证码文本")),
                (
                    "image_base64",
                    models.TextField(blank=True, verbose_name="图片Base64"),
                ),
                (
                    "is_used",
                    models.BooleanField(default=False, verbose_name="是否已使用"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="过期时间"
                    ),
                ),
            ],
            options={
                "db_table": "captchas",
                "indexes": [
                    models.Index(fields=["key"], name="captchas_key_f269fd_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=200, verbose_name="资讯标题")),
                ("content", models.TextField(blank=True, verbose_name="资讯内容")),
                (
                    "collect_count",
                    models.IntegerField(default=0, verbose_name="收藏人数"),
                ),
                ("like_count", models.IntegerField(default=0, verbose_name="点赞人数")),
                ("read_count", models.IntegerField(default=0, verbose_name="阅读人数")),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "video",
                    models.URLField(blank=True, max_length=500, verbose_name="视频URL"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="articles",
                        to="CounselorAdmin.category",
                        verbose_name="栏目ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "宣教资讯",
                "verbose_name_plural": "宣教资讯",
                "db_table": "articles",
            },
        ),
        migrations.CreateModel(
            name="Cancellation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("cancel_start", models.DateTimeField(verbose_name="停诊开始时间")),
                ("cancel_end", models.DateTimeField(verbose_name="停诊结束时间")),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "counselor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="CounselorAdmin.counselor",
                        verbose_name="咨询师",
                    ),
                ),
            ],
            options={
                "verbose_name": "停诊",
                "verbose_name_plural": "停诊",
                "db_table": "cancellations",
            },
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "order_no",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="订单编号"
                    ),
                ),
                (
                    "client_name",
                    models.CharField(max_length=50, verbose_name="预约人员姓名"),
                ),
                (
                    "client_gender",
                    models.CharField(
                        choices=[("男", "男"), ("女", "女")],
                        max_length=2,
                        verbose_name="性别",
                    ),
                ),
                (
                    "client_age",
                    models.IntegerField(blank=True, null=True, verbose_name="年龄"),
                ),
                (
                    "service_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("个体咨询", "个体咨询"),
                            ("团体咨询", "团体咨询"),
                            ("家庭咨询", "家庭咨询"),
                            ("危机干预", "危机干预"),
                        ],
                        max_length=20,
                        verbose_name="服务类型",
                    ),
                ),
                (
                    "counseling_keywords",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="咨询关键字"
                    ),
                ),
                (
                    "appointment_date",
                    models.DateField(blank=True, null=True, verbose_name="预约日期"),
                ),
                (
                    "time_slot",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="预约时段"
                    ),
                ),
                (
                    "submit_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="提交时间"),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="结束时间"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("未开始", "未开始"),
                            ("进行中", "进行中"),
                            ("已结束", "已结束"),
                        ],
                        default="未开始",
                        max_length=10,
                        verbose_name="状态",
                    ),
                ),
                (
                    "counselor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="CounselorAdmin.counselor",
                        verbose_name="关联咨询师",
                    ),
                ),
            ],
            options={
                "verbose_name": "预约订单",
                "verbose_name_plural": "预约订单",
                "db_table": "appointments",
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("work_date", models.DateField(verbose_name="工作日期")),
                ("start_time", models.TimeField(verbose_name="开始时间")),
                ("end_time", models.TimeField(verbose_name="结束时间")),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "counselor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="CounselorAdmin.counselor",
                        verbose_name="咨询师",
                    ),
                ),
            ],
            options={
                "verbose_name": "排班",
                "verbose_name_plural": "排班",
                "db_table": "schedules",
            },
        ),
        migrations.CreateModel(
            name="StudentReferral",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "student_name",
                    models.CharField(max_length=50, verbose_name="学生姓名"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("男", "男"), ("女", "女")],
                        max_length=2,
                        verbose_name="性别",
                    ),
                ),
                (
                    "school",
                    models.CharField(blank=True, max_length=100, verbose_name="学校"),
                ),
                (
                    "grade",
                    models.CharField(blank=True, max_length=20, verbose_name="年级"),
                ),
                (
                    "class_name",
                    models.CharField(blank=True, max_length=20, verbose_name="班级"),
                ),
                (
                    "referral_reason",
                    models.TextField(blank=True, verbose_name="转介原因"),
                ),
                (
                    "referral_date",
                    models.DateField(blank=True, null=True, verbose_name="转介时间"),
                ),
                (
                    "created_by",
                    models.CharField(blank=True, max_length=50, verbose_name="创建人"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "referral_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="CounselorAdmin.referralunit",
                        verbose_name="转介单位",
                    ),
                ),
            ],
            options={
                "verbose_name": "学生转介",
                "verbose_name_plural": "学生转介",
                "db_table": "student_referrals",
            },
        ),
        migrations.CreateModel(
            name="VerificationCode",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "username",
                    models.CharField(blank=True, max_length=50, verbose_name="用户名"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=100, null=True, verbose_name="邮箱地址"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="手机号"
                    ),
                ),
                ("code", models.CharField(max_length=12, verbose_name="验证码")),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("register", "register"),
                            ("login", "login"),
                            ("captcha", "captcha"),
                        ],
                        default="register",
                        max_length=20,
                        verbose_name="用途",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="是否已验证"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="过期时间"
                    ),
                ),
            ],
            options={
                "db_table": "verification_codes",
                "indexes": [
                    models.Index(
                        fields=["email", "phone", "username", "purpose"],
                        name="verificatio_email_ba7ab3_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="AdminAuthToken",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "token",
                    models.CharField(max_length=128, unique=True, verbose_name="Token"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否有效"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="过期时间"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tokens",
                        to="CounselorAdmin.adminuser",
                        verbose_name="管理员",
                    ),
                ),
            ],
            options={
                "db_table": "admin_auth_tokens",
                "indexes": [
                    models.Index(fields=["token"], name="admin_auth__token_63edab_idx")
                ],
            },
        ),
    ]
